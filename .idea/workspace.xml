<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="98931868-6569-4e33-b7fa-dc484e09df39" name="变更" comment="">
      <change afterPath="$PROJECT_DIR$/api/pb/namespace/v1/namespace.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/pb/namespace/v1/rpc.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/pb/namespace/v1/validate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/pb/role/v1/permission.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/pb/role/v1/role.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/pb/role/v1/validate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/pb/workspace/v1/validate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/api/http.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/api/namespace.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/data/data.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/data/namespace.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/impl/impl.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/impl/namespace.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/interface.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/namespace/namespace.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/proxy/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/role/data/data.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/role/data/permission.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/role/data/role.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/role/impl/permission.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/role/interface.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/role/permissions.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/role/role.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/workspace/api/workspace.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/workspace/data/workspace.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/third_party/ekube/pb/meta/meta.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/third_party/ekube/pb/page/page.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/third_party/ekube/pb/request/request.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tools/meta.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tools/page.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/cluster/v1/cluster.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/cluster/v1/cluster.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/cluster/v1/cluster.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/cluster/v1/cluster.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/cluster/v1/rpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/cluster/v1/rpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/endpoint/v1/endpoint.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/endpoint/v1/endpoint.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/endpoint/v1/rpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/endpoint/v1/rpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/namespace/namespace.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/policy/v1/policy.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/policy/v1/policy.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/policy/v1/policy.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/policy/v1/policy.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/role/v1/permission.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/role/v1/permission.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/role/v1/permission.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/role/v1/permission.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/role/v1/role.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/role/v1/role.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/role/v1/role.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/role/v1/role.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/role/v1/rpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/role/v1/rpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/role/v1/rpc.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/role/v1/rpc.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/role/v1/rpc_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/role/v1/rpc_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/workspace/v1/rpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/workspace/v1/rpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/workspace/v1/rpc.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/workspace/v1/rpc.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/workspace/v1/rpc_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/workspace/v1/rpc_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/workspace/v1/workspace.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/workspace/v1/workspace.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/pb/workspace/v1/workspace.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/pb/workspace/v1/workspace.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/all/api.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/all/api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/all/grpc.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/all/grpc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/all/internal.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/all/internal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/cluster/cluster.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/cluster/cluster.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/project/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/internal/namespace/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/role/api/http.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/role/api/http.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/role/api/role.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/role/api/role.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/role/impl/impl.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/role/impl/impl.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/role/impl/role.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/role/impl/role.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/workspace/api/http.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/workspace/api/http.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/workspace/impl/workspace.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/workspace/impl/workspace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/workspace/workspace.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/workspace/workspace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tools/hash.go" beforeDir="false" afterPath="$PROJECT_DIR$/tools/hash.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/api/cluster/cluster.proto" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/api/cluster/rpc.proto" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/internal/cluster/impl/impl.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/internal/proxy/api/http.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/makefile" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/resource/client.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/resource/informer.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/resource/pod/client.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/resource/pod/pod.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/Library/Caches/JetBrains/GoLand2022.1/protoeditor/google/protobuf/empty.proto" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/go/pkg/mod/k8s.io/client-go@v0.27.4/informers/factory.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
    <option name="showPreview" value="true" />
  </component>
  <component name="ProjectId" id="2T0vElVUVckvx3WxIKTWltQHcnJ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.vendoring.notification.had.been.shown&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;ToolWindow运行.ShowToolbar&quot;: &quot;false&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;configurable..is.expanded&quot;: &quot;false&quot;,
    &quot;configurable.GoLibrariesConfigurable.is.expanded&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/draken/Desktop/golang/ekube/third_party/ekube/pb&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.goide.configuration.GoProjectSettingsConfigurable&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/third_party/ekube/pb" />
      <recent name="$PROJECT_DIR$/api/pb/policy/v1" />
      <recent name="$PROJECT_DIR$/pkg/apis" />
      <recent name="$PROJECT_DIR$/api/k8s/user/v1" />
      <recent name="$PROJECT_DIR$/pkg/controller" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/api/pb/namespace/v1" />
      <recent name="$PROJECT_DIR$/api/pb/workspace/v1" />
      <recent name="$PROJECT_DIR$/api/pb/endpoint/v1" />
      <recent name="$PROJECT_DIR$/api/pb/role" />
      <recent name="$PROJECT_DIR$/api/pb/role/v1" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build ekube">
    <configuration name="go build ekube" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ekube" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="start" />
      <kind value="PACKAGE" />
      <package value="ekube" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build mkube" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ekube" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="start" />
      <kind value="PACKAGE" />
      <package value="mkube" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="ekube/internal/cluster/impl 中的 TestCreateCluster" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ekube" />
      <working_directory value="$PROJECT_DIR$/internal/cluster/impl" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ekube/internal/cluster/impl" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateCluster\E$" />
      <method v="2" />
    </configuration>
    <configuration name="ekube/pkg/terminal 中的 TestNewTerminalOption" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ekube" />
      <working_directory value="$PROJECT_DIR$/pkg/terminal" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ekube/pkg/terminal" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewTerminalOption\E$" />
      <method v="2" />
    </configuration>
    <configuration name="ekube/resource 中的 TestTransByte" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ekube" />
      <working_directory value="$PROJECT_DIR$/resource" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ekube/resource" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestTransByte\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build ekube" />
        <item itemvalue="Go 测试.ekube/pkg/terminal 中的 TestNewTerminalOption" />
        <item itemvalue="Go 测试.ekube/resource 中的 TestTransByte" />
        <item itemvalue="Go 测试.ekube/internal/cluster/impl 中的 TestCreateCluster" />
        <item itemvalue="Go 构建.go build mkube" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/k8s/terminal/types.go</url>
          <line>5</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="kubeConfigYaml" language="go" />
      </configuration>
    </watches-manager>
  </component>
</project>