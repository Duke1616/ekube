// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.2
// source: pb/token/v1/token.proto

package token

import (
	v1 "ekube/api/pb/user/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GRANT_TYPE int32

const (
	// 用户密码授权
	GRANT_TYPE_PASSWORD GRANT_TYPE = 0
	// LDAP授权
	GRANT_TYPE_LDAP GRANT_TYPE = 1
)

// Enum value maps for GRANT_TYPE.
var (
	GRANT_TYPE_name = map[int32]string{
		0: "PASSWORD",
		1: "LDAP",
	}
	GRANT_TYPE_value = map[string]int32{
		"PASSWORD": 0,
		"LDAP":     1,
	}
)

func (x GRANT_TYPE) Enum() *GRANT_TYPE {
	p := new(GRANT_TYPE)
	*p = x
	return p
}

func (x GRANT_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GRANT_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_token_v1_token_proto_enumTypes[0].Descriptor()
}

func (GRANT_TYPE) Type() protoreflect.EnumType {
	return &file_pb_token_v1_token_proto_enumTypes[0]
}

func (x GRANT_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GRANT_TYPE.Descriptor instead.
func (GRANT_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_pb_token_v1_token_proto_rawDescGZIP(), []int{0}
}

// 令牌类型
type TOKEN_TYPE int32

const (
	// Bearer Token
	TOKEN_TYPE_BEARER TOKEN_TYPE = 0
	// Json Web Token
	TOKEN_TYPE_JWT TOKEN_TYPE = 1
)

// Enum value maps for TOKEN_TYPE.
var (
	TOKEN_TYPE_name = map[int32]string{
		0: "BEARER",
		1: "JWT",
	}
	TOKEN_TYPE_value = map[string]int32{
		"BEARER": 0,
		"JWT":    1,
	}
)

func (x TOKEN_TYPE) Enum() *TOKEN_TYPE {
	p := new(TOKEN_TYPE)
	*p = x
	return p
}

func (x TOKEN_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TOKEN_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_token_v1_token_proto_enumTypes[1].Descriptor()
}

func (TOKEN_TYPE) Type() protoreflect.EnumType {
	return &file_pb_token_v1_token_proto_enumTypes[1]
}

func (x TOKEN_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TOKEN_TYPE.Descriptor instead.
func (TOKEN_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_pb_token_v1_token_proto_rawDescGZIP(), []int{1}
}

type PLATFORM int32

const (
	// Web 登陆授权
	PLATFORM_WEB PLATFORM = 0
	// API 访问授权
	PLATFORM_API PLATFORM = 1
)

// Enum value maps for PLATFORM.
var (
	PLATFORM_name = map[int32]string{
		0: "WEB",
		1: "API",
	}
	PLATFORM_value = map[string]int32{
		"WEB": 0,
		"API": 1,
	}
)

func (x PLATFORM) Enum() *PLATFORM {
	p := new(PLATFORM)
	*p = x
	return p
}

func (x PLATFORM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PLATFORM) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_token_v1_token_proto_enumTypes[2].Descriptor()
}

func (PLATFORM) Type() protoreflect.EnumType {
	return &file_pb_token_v1_token_proto_enumTypes[2]
}

func (x PLATFORM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PLATFORM.Descriptor instead.
func (PLATFORM) EnumDescriptor() ([]byte, []int) {
	return file_pb_token_v1_token_proto_rawDescGZIP(), []int{2}
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 颁发平台, 根据授权方式判断
	// @gotags: bson:"platform" json:"platform"
	Platform PLATFORM `protobuf:"varint,1,opt,name=platform,proto3,enum=ekube.token.v1.PLATFORM" json:"platform" bson:"platform"`
	// 访问令牌
	// @gotags: bson:"_id" json:"access_token"
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token" bson:"_id"`
	// 刷新令牌, 当访问令牌过期时, 可以刷新令牌进行刷新
	// @gotags: bson:"refresh_token" json:"refresh_token"
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token" bson:"refresh_token"`
	// 颁发时间
	// @gotags: bson:"issue_at" json:"issue_at"
	IssueAt int64 `protobuf:"varint,4,opt,name=issue_at,json=issueAt,proto3" json:"issue_at" bson:"issue_at"`
	// 访问令牌过期时间, 单位秒
	// @gotags: bson:"access_expired_at" json:"access_expired_at"
	AccessExpiredAt int64 `protobuf:"varint,5,opt,name=access_expired_at,json=accessExpiredAt,proto3" json:"access_expired_at" bson:"access_expired_at"`
	// 刷新令牌过期时间, 单位秒
	// @gotags: bson:"refresh_expired_at" json:"refresh_expired_at"
	RefreshExpiredAt int64 `protobuf:"varint,6,opt,name=refresh_expired_at,json=refreshExpiredAt,proto3" json:"refresh_expired_at" bson:"refresh_expired_at"`
	// 用户类型
	// @gotags: bson:"user_type" json:"user_type"
	UserType v1.TYPE `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,enum=ekube.user.v1.TYPE" json:"user_type" bson:"user_type"`
	// 用户名
	// @gotags: bson:"username" json:"username"
	Username string `protobuf:"bytes,9,opt,name=username,proto3" json:"username" bson:"username"`
	// 用户Id
	// @gotags: bson:"user_id" json:"user_id"
	UserId string `protobuf:"bytes,10,opt,name=user_id,json=userId,proto3" json:"user_id" bson:"user_id"`
	// 授权类型
	// @gotags: bson:"grant_type" json:"grant_type"
	GrantType GRANT_TYPE `protobuf:"varint,11,opt,name=grant_type,json=grantType,proto3,enum=ekube.token.v1.GRANT_TYPE" json:"grant_type" bson:"grant_type"`
	// 令牌类型
	// @gotags: bson:"type" json:"type"
	Type TOKEN_TYPE `protobuf:"varint,12,opt,name=type,proto3,enum=ekube.token.v1.TOKEN_TYPE" json:"type" bson:"type"`
	// 令牌描述信息, 当授权类型为Private Token时, 做描述使用
	// @gotags: bson:"description" json:"description,omitempty"
	Description string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	// 其他信息
	// @gotags: bson:"meta" json:"meta,omitempty"
	Meta map[string]string `protobuf:"bytes,19,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"meta"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_token_v1_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_pb_token_v1_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_pb_token_v1_token_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetPlatform() PLATFORM {
	if x != nil {
		return x.Platform
	}
	return PLATFORM_WEB
}

func (x *Token) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Token) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Token) GetIssueAt() int64 {
	if x != nil {
		return x.IssueAt
	}
	return 0
}

func (x *Token) GetAccessExpiredAt() int64 {
	if x != nil {
		return x.AccessExpiredAt
	}
	return 0
}

func (x *Token) GetRefreshExpiredAt() int64 {
	if x != nil {
		return x.RefreshExpiredAt
	}
	return 0
}

func (x *Token) GetUserType() v1.TYPE {
	if x != nil {
		return x.UserType
	}
	return v1.TYPE(0)
}

func (x *Token) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Token) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Token) GetGrantType() GRANT_TYPE {
	if x != nil {
		return x.GrantType
	}
	return GRANT_TYPE_PASSWORD
}

func (x *Token) GetType() TOKEN_TYPE {
	if x != nil {
		return x.Type
	}
	return TOKEN_TYPE_BEARER
}

func (x *Token) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Token) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

type IssueTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 测试颁发
	// @gotags: json:"dry_run"
	DryRun bool `protobuf:"varint,15,opt,name=dry_run,json=dryRun,proto3" json:"dry_run"`
	// 授权类型
	// @gotags: json:"grant_type"
	GrantType GRANT_TYPE `protobuf:"varint,1,opt,name=grant_type,json=grantType,proto3,enum=ekube.token.v1.GRANT_TYPE" json:"grant_type"`
	// 令牌类型
	// @gotags: json:"type"
	Type TOKEN_TYPE `protobuf:"varint,2,opt,name=type,proto3,enum=ekube.token.v1.TOKEN_TYPE" json:"type"`
	// 令牌过期时间
	// @gotags: json:"expired_at"
	ExpiredAt int64 `protobuf:"varint,3,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at"`
	// PASSWORD授权时, 用户名
	// @gotags: json:"username,omitempty"
	Username string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	// PASSWORD授权时, 用户密码
	// @gotags: json:"password,omitempty"
	Password string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	// REFRESH授权时, 刷新令牌
	// @gotags: json:"refresh_token,omitempty"
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// PRIVATE_TOKEN授权时, 访问令牌
	// @gotags: json:"access_token,omitempty"
	AccessToken string `protobuf:"bytes,9,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// PRIVATE_TOKEN授权时, 描述信息
	// @gotags: json:"description"
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description"`
}

func (x *IssueTokenRequest) Reset() {
	*x = IssueTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_token_v1_token_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTokenRequest) ProtoMessage() {}

func (x *IssueTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_token_v1_token_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTokenRequest.ProtoReflect.Descriptor instead.
func (*IssueTokenRequest) Descriptor() ([]byte, []int) {
	return file_pb_token_v1_token_proto_rawDescGZIP(), []int{1}
}

func (x *IssueTokenRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *IssueTokenRequest) GetGrantType() GRANT_TYPE {
	if x != nil {
		return x.GrantType
	}
	return GRANT_TYPE_PASSWORD
}

func (x *IssueTokenRequest) GetType() TOKEN_TYPE {
	if x != nil {
		return x.Type
	}
	return TOKEN_TYPE_BEARER
}

func (x *IssueTokenRequest) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

func (x *IssueTokenRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *IssueTokenRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *IssueTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *IssueTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *IssueTokenRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_pb_token_v1_token_proto protoreflect.FileDescriptor

var file_pb_token_v1_token_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x62, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65, 0x6b, 0x75, 0x62, 0x65,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x70, 0x62, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xdc, 0x04, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65,
	0x6b, 0x75, 0x62, 0x65, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4c,
	0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x65, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6b, 0x75, 0x62, 0x65,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x65, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xd8, 0x02, 0x0a, 0x11, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x39,
	0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6b, 0x75, 0x62, 0x65, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6b, 0x75, 0x62, 0x65, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x24, 0x0a, 0x0a, 0x47, 0x52,
	0x41, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x4f, 0x52, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x44, 0x41, 0x50, 0x10, 0x01,
	0x2a, 0x21, 0x0a, 0x0a, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x45, 0x41, 0x52, 0x45, 0x52, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x57,
	0x54, 0x10, 0x01, 0x2a, 0x1c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x12,
	0x07, 0x0a, 0x03, 0x57, 0x45, 0x42, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x10,
	0x01, 0x42, 0x1d, 0x5a, 0x1b, 0x65, 0x6b, 0x75, 0x62, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x62, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_token_v1_token_proto_rawDescOnce sync.Once
	file_pb_token_v1_token_proto_rawDescData = file_pb_token_v1_token_proto_rawDesc
)

func file_pb_token_v1_token_proto_rawDescGZIP() []byte {
	file_pb_token_v1_token_proto_rawDescOnce.Do(func() {
		file_pb_token_v1_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_token_v1_token_proto_rawDescData)
	})
	return file_pb_token_v1_token_proto_rawDescData
}

var file_pb_token_v1_token_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pb_token_v1_token_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_token_v1_token_proto_goTypes = []interface{}{
	(GRANT_TYPE)(0),           // 0: ekube.token.v1.GRANT_TYPE
	(TOKEN_TYPE)(0),           // 1: ekube.token.v1.TOKEN_TYPE
	(PLATFORM)(0),             // 2: ekube.token.v1.PLATFORM
	(*Token)(nil),             // 3: ekube.token.v1.Token
	(*IssueTokenRequest)(nil), // 4: ekube.token.v1.IssueTokenRequest
	nil,                       // 5: ekube.token.v1.Token.MetaEntry
	(v1.TYPE)(0),              // 6: ekube.user.v1.TYPE
}
var file_pb_token_v1_token_proto_depIdxs = []int32{
	2, // 0: ekube.token.v1.Token.platform:type_name -> ekube.token.v1.PLATFORM
	6, // 1: ekube.token.v1.Token.user_type:type_name -> ekube.user.v1.TYPE
	0, // 2: ekube.token.v1.Token.grant_type:type_name -> ekube.token.v1.GRANT_TYPE
	1, // 3: ekube.token.v1.Token.type:type_name -> ekube.token.v1.TOKEN_TYPE
	5, // 4: ekube.token.v1.Token.meta:type_name -> ekube.token.v1.Token.MetaEntry
	0, // 5: ekube.token.v1.IssueTokenRequest.grant_type:type_name -> ekube.token.v1.GRANT_TYPE
	1, // 6: ekube.token.v1.IssueTokenRequest.type:type_name -> ekube.token.v1.TOKEN_TYPE
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_pb_token_v1_token_proto_init() }
func file_pb_token_v1_token_proto_init() {
	if File_pb_token_v1_token_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_token_v1_token_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_token_v1_token_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_token_v1_token_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_token_v1_token_proto_goTypes,
		DependencyIndexes: file_pb_token_v1_token_proto_depIdxs,
		EnumInfos:         file_pb_token_v1_token_proto_enumTypes,
		MessageInfos:      file_pb_token_v1_token_proto_msgTypes,
	}.Build()
	File_pb_token_v1_token_proto = out.File
	file_pb_token_v1_token_proto_rawDesc = nil
	file_pb_token_v1_token_proto_goTypes = nil
	file_pb_token_v1_token_proto_depIdxs = nil
}
